@using Markdig
<MudPaper Outlined="true" Class="p-1">
    <MudStack Spacing="1" Justify="Justify.Center">
        <MudText Align="Align.Center">
            <span class="@(ShowAnswer ? "d-block" : "d-none") fw-bolder">
                @Answer.ToString()
            </span>
            <span class="@(string.IsNullOrWhiteSpace(Explanation) ? "d-none" : "d-block")">
                @((MarkupString)Markdown.ToHtml(Explanation == null ? " " : Explanation))
            </span>
        </MudText>
        <MudStack Row="true" Spacing="3" Justify="Justify.Center" AlignItems="AlignItems.Center">
            <MudIconButton Color="Color.Default" Size="Size.Small" OnClick="@(() => EditClicked.InvokeAsync())" Icon="@Icons.Material.Filled.Edit" />
            <MudIconButton Icon="@Icons.Material.Filled.Feedback" OnClick="@(() => FeedbackClicked.InvokeAsync())" Color="Color.Default" Size="Size.Small" />
            <MudIconButton Color="Color.Default" Size="Size.Small" OnClick="@(() => AskMedbaseClicked.InvokeAsync())" Icon="@Icons.Material.Filled.AutoAwesome" />
        </MudStack>
    </MudStack>
</MudPaper>

@code {
    [Parameter]
    public string QuestionMain { get; set; } = "";
    [Parameter]
    public string Child { get; set; } = "";
    [Parameter]
    public bool Answer { get; set; }
    [Parameter]
    public string Explanation { get; set; } = "";
    [Parameter]
    public bool ShowAnswer { get; set; } = true;
    [Parameter]
    public EventCallback<string> AskMedbaseClicked { get; set; }
    [Parameter]
    public EventCallback<string> EditClicked { get; set; }
    [Parameter]
    public EventCallback<string> FeedbackClicked { get; set; }
}
