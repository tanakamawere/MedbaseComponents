@inject IApiRepository repository
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <EditForm OnSubmit="PostCorrection" Model="Corrections">
            <MudText>Which stem?</MudText>
            <input hidden @bind-value="Corrections.Id"/>
            <MudRadioGroup @bind-SelectedOption="Corrections.QuestionChild" T="string">
                <MudRadio Value="@("A")" Color="Color.Primary">a</MudRadio>
                <MudRadio Value="@("B")" Color="Color.Primary">b</MudRadio>
                <MudRadio Value="@("C")" Color="Color.Primary">c</MudRadio>
                <MudRadio Value="@("D")" Color="Color.Primary">d</MudRadio>
                <MudRadio Value="@("E")" Color="Color.Primary">e</MudRadio>
            </MudRadioGroup>
            <MudText>Suggested Answer</MudText>
            <MudRadioGroup @bind-SelectedOption="Corrections.SuggestedAnswer" T="bool">
                <MudRadio Value="true" Color="Color.Primary">True</MudRadio>
                <MudRadio Value="false" Color="Color.Primary">False</MudRadio>
            </MudRadioGroup>
            <MudTextField T="string" Label="Suggested Explanation" @bind-Value="Corrections.SuggestedExplanation"></MudTextField>
            <button type="submit" class="btn btn-primary m-2">Save</button>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public int questionId { get; set; } = 0;
    public string SelectedChild { get; set; }
    public bool SuggestedAnswer { get; set; }
    private string SuggestedExplanation { get; set; }
    private Snackbar snackbar;


    Corrections Corrections = new();


    async void PostCorrection()
    {
        Corrections.QuestionId = questionId;
        bool response = await repository.PostCorrection(Corrections);

        if (response is true)
            ShowSnackbar("Thanks for the correction. It will be reviewed by our team shortly");
        else
            ShowSnackbar("Oops, something didn't go well. Please try again later.");

        Close();
    }

    void ShowSnackbar(string message)
    {
        snackbar = Snackbar.Add(message, Severity.Success);
    }

    void Close() => MudDialog.Close();
    void Cancel() => MudDialog.Cancel();
}