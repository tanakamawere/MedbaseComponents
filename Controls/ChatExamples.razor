<MudGrid Justify="Justify.Center" Spacing="2" Class="mt-5">
    <MudItem xs="0" sm="0" md="0" lg="12" Class="d-flex">
        <MudIcon Icon="@Icons.Material.Filled.AutoAwesome"
                 Class="icon-huge ma-auto" Size="Size.Large" Color="Color.Primary" />
    </MudItem>
    <MudItem xs="12">
        <MudText Typo="Typo.h2" Class="fw-bolder" Align="Align.Center">@Message</MudText>
    </MudItem>
    <MudItem lg="3" xs="3">
        <MudPaper Elevation="4" Height="12rem" onclick="@(async () => await OnClickedAsync(WhatIsIncluded))"
                  Class="d-flex pa-8 clickable flex-column align-center justify-center mud-width-full rounded dim">
            <MudText Typo="Typo.body1">
                @WhatIsIncluded
            </MudText>
        </MudPaper>
    </MudItem>
    <MudItem lg="3" xs="3">
        <MudPaper Elevation="4" Height="12rem" onclick="@(async () => await OnClickedAsync(WhatIsPerfReview))"
                  Class="d-flex pa-8 clickable flex-column align-center justify-center mud-width-full rounded dim">
            <MudText Typo="Typo.body1">
                @WhatIsPerfReview
            </MudText>
        </MudPaper>
    </MudItem>
    <MudItem lg="3" xs="3">
        <MudPaper Elevation="4" Height="12rem" onclick="@(async () => await OnClickedAsync(WhatDoesPmDo))"
                  Class="d-flex pa-8 clickable flex-column align-center justify-center mud-width-full rounded dim">
            <MudText Typo="Typo.body1" Class="text-wrap">
                @WhatDoesPmDo
            </MudText>
        </MudPaper>
    </MudItem>
</MudGrid>

@code{

    [Parameter, EditorRequired] public required string Message { get; set; }
    [Parameter, EditorRequired] public EventCallback<string> OnExampleClicked { get; set; }

    private string WhatIsIncluded { get; } = "Brief description of the ATLS protocol";
    private string WhatIsPerfReview { get; } = "What is a fistula?";
    private string WhatDoesPmDo { get; } = "What does a gastroenterologist do?";

    private async Task OnClickedAsync(string exampleText)
    {
        if (OnExampleClicked.HasDelegate)
        {
            await OnExampleClicked.InvokeAsync(exampleText);
        }
    }
}