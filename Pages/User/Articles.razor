@page "/articles"
@inject IApiRepository repository
@inject NavigationManager navManager

<PageTitle>@title</PageTitle>
    <HeadContent>
        <title>@title</title>
    <meta name="title" content="@title" />
    <meta name="description" content="@description" />

    <!-- Open Graph / Facebook -->
    <meta name="og:type" content="website" />
    <meta name="og:url" content="@navManager.BaseUri" />
    <meta name="og:title" content="@title" />
    <meta name="og:description" content="@description" />
    <meta name="og:image" content="@image" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content="@navManager.BaseUri" />
    <meta name="twitter:title" content="@title" />
    <meta name="twitter:description" content="@description" />
    <meta name="twitter:image" content="@image" />
</HeadContent>

<header>
    <div class="container my-5">
        <div class="row p-4 pb-0 pe-lg-0 pt-lg-5 align-items-center rounded-3 border shadow-lg">
            <div class="col-lg-7 p-3 p-lg-5 pt-lg-3">
                <MudText Typo="Typo.h2" class="display-5 fw-bolder mb-2">
                    Articles🥸
                </MudText>
                <MudText class="fw-normal mb-4">
                    Welcome to our Articles.
                    @description
                </MudText>
            </div>
            <div class="col-lg-4 offset-lg-1 m-5">
                <img class="img-fluid bg-transparent" src="img/topics.png" style="max-height:400px;">
            </div>
        </div>
    </div>
</header>

<div class="container mt-5">
    <div class="row gx-5">
        @foreach (Article item in allArticles.Reverse())
        {
            <div class="col-lg-4 mb-5">
                <div class="card h-100 shadow border-0">
                    <img class="card-img-top" src="@item.ImageURL" alt="..." />
                    <div class="card-body p-4">
                        <a class="text-decoration-none link-dark stretched-link" href="@($"/article/{item.Id}")">
                            <h5 class="card-title mb-3">
                                @item.Title
                            </h5>
                        </a>
                        <p class="card-text mb-0">
                            @item.Summary
                        </p>
                    </div>
                    <div class="card-footer p-4 pt-0 bg-transparent border-top-0">
                        <div class="d-flex align-items-end justify-content-between">
                            <div class="d-flex align-items-center">
                                <div class="small">
                                    <div class="fw-bold">@item.Writer</div>
                                    <div class="text-muted">
                                        @item.DatePosted.ToString("dddd, dd MMMM yyyy")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    public IEnumerable<Article> allArticles { get; set; } = Enumerable.Empty<Article>();

    protected async override Task OnInitializedAsync() => await UpdatePage();

    private async Task UpdatePage()
    {
        allArticles = await repository.GetArticles();
    }


    private string description = "Medbase articles are articles that cover various topics related to medicine, health, and wellness. They are written by medical students, doctors, and other experts in the field.";
    private string title = "Articles | Medbase";
    private string image = "https://i.postimg.cc/T1DjN4S5/Logo.png";
}

