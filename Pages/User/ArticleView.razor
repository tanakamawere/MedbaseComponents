@page "/article/{id:int}"
@using MedbaseLibrary.Models
@inject IApiRepository repository
@using Markdig
@inject NavigationManager navManager

<PageTitle>@Article.Title | Medbase</PageTitle>
<HeadContent>
    <title>@Article.Title | Medbase</title>
    <meta name="title" content="@Article.Title | Medbase" />
    <meta name="description" content="@Article.Summary" />

    <!-- Open Graph / Facebook -->
    <meta name="og:type" content="website" />
    <meta name="og:url" content="@navManager.BaseUri" />
    <meta name="og:title" content="@Article.Title | Medbase" />
    <meta name="og:description" content="@Article.Summary" />
    <meta name="og:image" content="@Article.ImageURL" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content="@navManager.BaseUri" />
    <meta name="twitter:title" content="@Article.Title | Medbase" />
    <meta name="twitter:description" content="@Article.Summary" />
    <meta name="twitter:image" content="@Article.ImageURL" />
</HeadContent>

<div class="container">
    <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
    @if (loading.Equals(true))
    {
        <LoadingComponent />
    }
    else
    {
        <div class="row align-items-center justify-content-center">
            <div class="col-xl-6 col-xxl-6 text-center">
                <img class="rounded-top rounded-bottom img-fluid" src="@Article.ImageURL" />
            </div>
            <div class="col-lg-6 col-xl-6 col-xxl-4">
                <div class="my-3 text-center text-xl-start">
                    <h1 class="fw-bolder">
                        @Article.Title
                    </h1>
                    <div class="row align-items-center justify-content-between container-fluid">
                        <!-- <img class="col rounded-circle" style="max-height: 50px; max-width: 50px; background-color: transparent;" src="/assets/img/profile_picture.jpg"/> -->
                        <div class="col social-links">
                            <p>@Article.Writer</p>
                            <h6>
                                @Article.DatePosted.ToString("dddd, dd MMMM yyyy")
                            </h6>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <hr/>

        <!-- Post Content -->
        <h6>@Article.Summary</h6>

        <div style="font-family: 'Open Sans', sans-serif;">
            <MudMarkdown Value="@Article.Body" />
        </div>

        <!-- Side Widget -->
        <div class="card my-4">
            <h5 class="card-header">More to read?</h5>
            <div class="card-body">
                Go back to <a class="ml-5" href="/articles">Articles</a>.
            </div>
        </div>
    }
</div>
@code {
    [Parameter]
    public int id { get; set; } = 0;

    public Article Article { get; set; } = new();
    private bool loading;


    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: "#", icon: Icons.Material.Filled.Home),
        new BreadcrumbItem("Articles", href: "/articles", icon: Icons.Material.Filled.Newspaper),
    };

    protected async override Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            loading = true;
            Article = await repository.GetArticle(id) ?? new();
            loading = false;
        }
    }
}
