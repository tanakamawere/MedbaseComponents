@page "/notes"
@using Medbase.Application.Services
@using MedbaseComponents.Shared
@using MedbaseLibrary.Models
@inject NavigationManager navManager
@inject CoursesClient coursesClient
@inject NotesClient notesClient
@inject ISnackbar Snackbar
@inject UserService userService
<PageTitle>@title</PageTitle>
<HeadContent>
    <title>@title</title>
    <meta name="title" content="@title" />
    <meta name="description" content="@description" />

    <!-- Open Graph / Facebook -->
    <meta name="og:type" content="website" />
    <meta name="og:url" content="@navManager.BaseUri" />
    <meta name="og:title" content="@title" />
    <meta name="og:description" content="@description" />
    <meta name="og:image" content="@image" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content="@navManager.BaseUri" />
    <meta name="twitter:title" content="@title" />
    <meta name="twitter:description" content="@description" />
    <meta name="twitter:image" content="@image" />
</HeadContent>


<MudContainer Class="mt-5">
    @if (loading)
    {
        <LoadingComponent Message="Getting notes from the database..." />
    }
    else
    {

        <HeaderComponent Title="Your notes" Subtitle="On courses you have selected in your preferences" />
        <div class="row gx-5">
            <Virtualize Items="_courseNotes" Context="courseNotes" TItem="CourseNotesDto">
                <ItemContent>
                    <div class="col-lg-4 mb-5">
                        <MudCard>
                            <MudCardMedia Image="@courseNotes.CourseImage" Height="100" />
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h5">@courseNotes.Course</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                @foreach (var topic in courseNotes.Notes)
                                {
                                    @* <MudText @onclick="() => GoTo(topic.TopicRef)" Typo="Typo.body1">@topic.Name</MudText> *@
                                    <MudLink @onclick="() => GoTo(topic.Id)" 
                                    Typo="Typo.body1" 
                                    Class="fw-bolder">@topic.Title</MudLink> <br/>
                                }
                            </MudCardContent>
                        </MudCard>
                    </div>
                </ItemContent>
            </Virtualize>
        </div>
    }
</MudContainer>

@code {
    private List<CourseNotesDto> _courseNotes = [];
    private bool loading = true;
    private string userId = "";

    private string description = "Medbase notes are a convenient and effective way to study for medical school exams. A summary of key slides and high yield information. Dive in!";
    private string title = "Notes | Medbase";
    private string image = "https://i.postimg.cc/T1DjN4S5/Logo.png";


    protected override async Task OnInitializedAsync()
    {
        userId = await userService.GetUserIdAsync();

        loading = true;
        var response = await notesClient.GetNotesByUserId(userId);

        if (response.IsSuccess)
        {
            _courseNotes = response.Data.ToList();
        }

        loading = false;
    }
    private void GoTo(int id)
    {
        navManager.NavigateTo($"/note/{id}");
    }
}
