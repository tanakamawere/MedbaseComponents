@using MedbaseComponents.Controls
@using MedbaseLibrary.Helpers
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.Extensions.Configuration
@inherits LayoutComponentBase
@using System.Security.Claims
@inject IConfiguration _configuration
@inject NavigationManager navManager
@inject ISnackbar Snackbar
@inject IPlatformInfoService _platformInfoService


<PageTitle>Medbase | Medical School MCQs</PageTitle>

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="someTheme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudLink Typo="Typo.h6" Class="ml-3" Href="/home" Color="Color.Inherit">
            Medbase
        </MudLink>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu Rounded="true" Margin="Margin.Dense" Color="Color.Primary" Class="pa-2">
            <MudNavLink Href="/home" Icon="@Icons.Material.Filled.Dashboard">Home</MudNavLink>
            <MudNavLink Href="/chat" Icon="@Icons.Material.Filled.Computer">Medbase AI</MudNavLink>
            @* <MudNavLink Href="/pricing" Icon="@Icons.Material.Filled.PriceChange">Pricing</MudNavLink> *@
            
            <MudNavLink Href="/courses" Class="@(IsMaui == true ? "d-block" : "d-none")" Icon="@Icons.Material.Filled.Book">Courses</MudNavLink>
            <MudNavLink Href="/downloads" Class="@(IsMaui == true ? "d-none" : "d-block")" Icon="@Icons.Material.Filled.Download">Downloads</MudNavLink>
            <MudNavLink Href="/notes" Icon="@Icons.Material.Filled.Note">Notes</MudNavLink>
            @* <MudNavLink Href="/essays" Icon="@Icons.Material.Filled.WrapText">Essays</MudNavLink> *@
            <MudNavLink Href="/articles" Icon="@Icons.Material.Filled.Newspaper">Articles</MudNavLink>
            @* <MudNavLink Href="/Gamma" Icon="@Icons.Material.Filled.Download">Gamma</MudNavLink> *@
            <MudNavLink Href="/about" Icon="@Icons.Material.Filled.QuestionAnswer">About & Contact</MudNavLink>
            <MudNavLink OnClick="ThemeToggle" Icon="@(_isDarkMode == true ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode)">
                @(_isDarkMode == true ? "Dark Mode On" : "Dark Mode Off")
            </MudNavLink>

            <MudDivider />

            <MudPaper>
                @if (isBusy)
                {
                    <MedbaseComponents.Controls.LoadingComponent Message="Logging in..." />
                }
                else
                {
                    <CascadingAuthenticationState>
                        ﻿<AuthorizeView>
                            <Authorized>
                                <MudNavLink Href="Account/Logout">Log out</MudNavLink>
                                <MudNavLink Href="/profile">Hello @UserName</MudNavLink>
                            </Authorized>
                            <NotAuthorized>
                                <MudNavLink Href="Account/Login">Log in</MudNavLink>
                            </NotAuthorized>
                            <Authorizing>
                                <MudSkeleton />
                            </Authorizing>
                        </AuthorizeView>
                    </CascadingAuthenticationState>
                }
            </MudPaper>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>
@code {
    private bool isBusy = false;
    private bool isLoggedIn;
    private Snackbar snackbar;
    private string UserName = "";
    private bool IsMaui;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;
            UserName = state?.User?.Identity?.Name ?? string.Empty;
        }
        CheckPlatform();
    }

    private void CheckPlatform()
    {
#if WINDOWS || ANDROID || IOS
    IsMaui = true;
#else
        IsMaui = true;
#endif
    }

    bool _drawerOpen = true;
    private MudThemeProvider _mudThemeProvider;
    private bool _isDarkMode;
    MudTheme someTheme = new()
    {
        PaletteLight = new PaletteLight()
        {
                Primary = Colors.Blue.Darken2,
            AppbarBackground = Colors.Blue.Accent1,
        },
        PaletteDark = new PaletteDark()
        {
            Primary = Colors.Blue.Lighten1
        },
    };

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void ThemeToggle() =>
        _isDarkMode = !_isDarkMode;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private async Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
    }
}